services:
  # Redis service
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/redis:/data
    networks:
      - app-network

  # PostgreSQL service
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    networks:
      - app-network

  # Soketi service
  soketi:
    image: quay.io/soketi/soketi:1.4-16-debian
    container_name: soketi
    ports:
      - "6001:6001" # WebSocket server
      - "9601:9601" # Management API
    environment:
      PORT: 6001
      DEBUG: "*"
      SOKETI_DEFAULT_APP_USER_AUTHENTICATION: true
    networks:
      - app-network

  # Zookeeper service
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    volumes:
      - ./volumes/zookeeper:/var/lib/zookeeper
    networks:
      - app-network

  # Kafka service
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
